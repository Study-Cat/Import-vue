{"remainingRequest":"F:\\HbuilderXObject\\vueTest\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\HbuilderXObject\\vueTest\\src\\components\\import.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\HbuilderXObject\\vueTest\\src\\components\\import.vue","mtime":1600671435701},{"path":"F:\\HbuilderXObject\\vueTest\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600616452791},{"path":"F:\\HbuilderXObject\\vueTest\\node_modules\\babel-loader\\lib\\index.js","mtime":1600616468060},{"path":"F:\\HbuilderXObject\\vueTest\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600616452791},{"path":"F:\\HbuilderXObject\\vueTest\\node_modules\\vue-loader\\lib\\index.js","mtime":1600616465697}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default{\n\tdata(){\n\t\treturn{\n\t\t\tlimitUpload:1,\n\t\t\tfileTemp:null,\n\t\t\tfile:null,\n\t\t\tda:[],\n\t\t\tdalen:0\n\t\t};\n\t},\n\tmethods:{\n\t\t// 添加文件和上传成功和失败都会执行该文件\n\t\thandleChange(file, fileList){ \n\t\t\tconsole.log(\"handleChangec参数：\",file);\n\t\t    this.fileTemp = file.raw; //获取上传文件的头部的信息\n\t\t    if(this.fileTemp){ //判断头部是不是为空\n\t\t        if((this.fileTemp.type == 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet') \n\t\t            || (this.fileTemp.type == 'application/vnd.ms-excel')){ //判断头部是否符合设置\n\t\t            this.importfxx(this.fileTemp); //调用文件上传方法\n\t\t        } else { //文件格式不对时，提示信息\n\t\t            this.$message({\n\t\t                type:'warning',\n\t\t                message:'附件格式错误，请删除后重新上传！'\n\t\t            })\n\t\t        }\n\t\t    } else { //文件头部是空\n\t\t        this.$message({\n\t\t            type:'warning',\n\t\t            message:'请上传附件！'\n\t\t        })\n\t\t    }\n\t\t},\n\t\t//超出文件最大的数量，有关参数limitUpload\n\t\thandleExceed(){\n\t\t    this.$message({\n\t\t        type:'warning',\n\t\t        message:'超出最大上传文件数量的限制！'\n\t\t    })\n\t\t    return;\n\t\t},\n\t\t//文件移除时的钩子\n\t\thandleRemove(file,fileList){\n\t\t    this.fileTemp = null\n\t\t},\n\t\t//文件上传方法\n\t\timportfxx(obj) {\n\t\t    let _this = this;\n\t\t    let inputDOM = this.$refs.inputer;\n\t\t    // 通过DOM取文件数据\n\t\t\tconsole.log(\"_this的数据\",_this);\n\t\t\tconsole.log(\"inputDOM数据\",inputDOM);\n\t\t    this.file = event.currentTarget.files[0];\n\t\t\tconsole.log(\"event数据\",event);\n\t\t\tconsole.log(\"event.currentTarget.files[0]\",event.currentTarget.files[0]);\n\t\t    var rABS = false; //是否将文件读取为二进制字符串\n\t\t    var f = this.file;\n\t\t\n\t\t    var reader = new FileReader();\n\t\t    //if (!FileReader.prototype.readAsBinaryString) {\n\t\t    FileReader.prototype.readAsBinaryString = function(f) {\n\t\t        var binary = \"\";\n\t\t        var rABS = false; //是否将文件读取为二进制字符串\n\t\t        var pt = this;\n\t\t        var wb; //读取完成的数据\n\t\t        var outdata;\n\t\t        var reader = new FileReader();\n\t\t        reader.onload = function(e) {\n\t\t            var bytes = new Uint8Array(reader.result);\n\t\t            var length = bytes.byteLength;\n\t\t            for (var i = 0; i < length; i++) {\n\t\t                binary += String.fromCharCode(bytes[i]);\n\t\t            }\n\t\t            var XLSX = require(\"xlsx\");\n\t\t            if (rABS) {\n\t\t                wb = XLSX.read(btoa(fixdata(binary)), {\n\t\t                //手动转化\n\t\t                type: \"base64\"\n\t\t                });\n\t\t            } else {\n\t\t                wb = XLSX.read(binary, {\n\t\t                type: \"binary\"\n\t\t                });\n\t\t            }\n\t\t            outdata = XLSX.utils.sheet_to_json(wb.Sheets[wb.SheetNames[0]]); //outdata就是你想要的东西\n\t\t            console.log('未处理的原始数据如下：');\n\t\t            console.log(outdata);\n\t\t            //此处可对数据进行处理\n\t\t            let arr = [];\n\t\t            outdata.map(v => {\n\t\t                let obj = {}\n\t\t                obj.code = v['Code']\n\t\t                obj.name = v['Name']\n\t\t                obj.pro = v['province']\n\t\t                obj.cit = v['city']\n\t\t                obj.dis = v['district']\n\t\t                arr.push(obj)\n\t\t            });\n\t\t            _this.da=arr;\n\t\t            _this.dalen=arr.length;\n\t\t            return arr;\n\t\t        };\n\t\t        reader.readAsArrayBuffer(f);\n\t\t    };\n\t\t    if (rABS) {\n\t\t        reader.readAsArrayBuffer(f);\n\t\t    } else {\n\t\t        reader.readAsBinaryString(f);\n\t\t    }\n\t\t}\n\t\t\n\t\t\n\t}\n\t\n}\n",{"version":3,"sources":["import.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"import.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n\t<div>\r\n\t\t<!--limit:最大上传数，on-exceed：超过最大上传数量时的操作  on-change:上传成功和失败都会执行-->\r\n\t\t<el-upload\r\n\t\t    class=\"upload-demo\"\r\n\t\t    action=\"\"\r\n\t\t    :on-change=\"handleChange\"\r\n\t\t    :on-remove=\"handleRemove\"\r\n\t\t    :on-exceed=\"handleExceed\"\r\n\t\t    :limit=\"limitUpload\"\r\n\t\t    accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,application/vnd.ms-excel\"\r\n\t\t    :auto-upload=\"false\">\r\n\t\t<el-button size=\"small\" type=\"primary\">点击上传</el-button>\r\n\t\t<div slot=\"tip\" class=\"el-upload__tip\">只 能 上 传 xlsx / xls 文 件</div>\r\n\t\t</el-upload>\r\n\t\t\r\n\t\t<!-- 数据展示 -->\r\n\t\t  <el-main>\r\n\t\t      <el-table :data=\"da\">\r\n\t\t        <el-table-column prop=\"code\" label=\"编号\">\r\n\t\t        </el-table-column>\r\n\t\t        <el-table-column prop=\"name\" label=\"姓名\">\r\n\t\t        </el-table-column>\r\n\t\t        <el-table-column prop=\"pro\" label=\"省份\">\r\n\t\t        </el-table-column>\r\n\t\t        <el-table-column prop=\"cit\" label=\"城市\">\r\n\t\t        </el-table-column>\r\n\t\t        <el-table-column prop=\"dis\" label=\"区县\">\r\n\t\t        </el-table-column>\r\n\t\t      </el-table>\r\n\t\t    </el-main>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\texport default{\r\n\t\tdata(){\r\n\t\t\treturn{\r\n\t\t\t\tlimitUpload:1,\r\n\t\t\t\tfileTemp:null,\r\n\t\t\t\tfile:null,\r\n\t\t\t\tda:[],\r\n\t\t\t\tdalen:0\r\n\t\t\t};\r\n\t\t},\r\n\t\tmethods:{\r\n\t\t\t// 添加文件和上传成功和失败都会执行该文件\r\n\t\t\thandleChange(file, fileList){ \r\n\t\t\t\tconsole.log(\"handleChangec参数：\",file);\r\n\t\t\t    this.fileTemp = file.raw; //获取上传文件的头部的信息\r\n\t\t\t    if(this.fileTemp){ //判断头部是不是为空\r\n\t\t\t        if((this.fileTemp.type == 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet') \r\n\t\t\t            || (this.fileTemp.type == 'application/vnd.ms-excel')){ //判断头部是否符合设置\r\n\t\t\t            this.importfxx(this.fileTemp); //调用文件上传方法\r\n\t\t\t        } else { //文件格式不对时，提示信息\r\n\t\t\t            this.$message({\r\n\t\t\t                type:'warning',\r\n\t\t\t                message:'附件格式错误，请删除后重新上传！'\r\n\t\t\t            })\r\n\t\t\t        }\r\n\t\t\t    } else { //文件头部是空\r\n\t\t\t        this.$message({\r\n\t\t\t            type:'warning',\r\n\t\t\t            message:'请上传附件！'\r\n\t\t\t        })\r\n\t\t\t    }\r\n\t\t\t},\r\n\t\t\t//超出文件最大的数量，有关参数limitUpload\r\n\t\t\thandleExceed(){\r\n\t\t\t    this.$message({\r\n\t\t\t        type:'warning',\r\n\t\t\t        message:'超出最大上传文件数量的限制！'\r\n\t\t\t    })\r\n\t\t\t    return;\r\n\t\t\t},\r\n\t\t\t//文件移除时的钩子\r\n\t\t\thandleRemove(file,fileList){\r\n\t\t\t    this.fileTemp = null\r\n\t\t\t},\r\n\t\t\t//文件上传方法\r\n\t\t\timportfxx(obj) {\r\n\t\t\t    let _this = this;\r\n\t\t\t    let inputDOM = this.$refs.inputer;\r\n\t\t\t    // 通过DOM取文件数据\r\n\t\t\t\tconsole.log(\"_this的数据\",_this);\r\n\t\t\t\tconsole.log(\"inputDOM数据\",inputDOM);\r\n\t\t\t    this.file = event.currentTarget.files[0];\r\n\t\t\t\tconsole.log(\"event数据\",event);\r\n\t\t\t\tconsole.log(\"event.currentTarget.files[0]\",event.currentTarget.files[0]);\r\n\t\t\t    var rABS = false; //是否将文件读取为二进制字符串\r\n\t\t\t    var f = this.file;\r\n\t\t\t\r\n\t\t\t    var reader = new FileReader();\r\n\t\t\t    //if (!FileReader.prototype.readAsBinaryString) {\r\n\t\t\t    FileReader.prototype.readAsBinaryString = function(f) {\r\n\t\t\t        var binary = \"\";\r\n\t\t\t        var rABS = false; //是否将文件读取为二进制字符串\r\n\t\t\t        var pt = this;\r\n\t\t\t        var wb; //读取完成的数据\r\n\t\t\t        var outdata;\r\n\t\t\t        var reader = new FileReader();\r\n\t\t\t        reader.onload = function(e) {\r\n\t\t\t            var bytes = new Uint8Array(reader.result);\r\n\t\t\t            var length = bytes.byteLength;\r\n\t\t\t            for (var i = 0; i < length; i++) {\r\n\t\t\t                binary += String.fromCharCode(bytes[i]);\r\n\t\t\t            }\r\n\t\t\t            var XLSX = require(\"xlsx\");\r\n\t\t\t            if (rABS) {\r\n\t\t\t                wb = XLSX.read(btoa(fixdata(binary)), {\r\n\t\t\t                //手动转化\r\n\t\t\t                type: \"base64\"\r\n\t\t\t                });\r\n\t\t\t            } else {\r\n\t\t\t                wb = XLSX.read(binary, {\r\n\t\t\t                type: \"binary\"\r\n\t\t\t                });\r\n\t\t\t            }\r\n\t\t\t            outdata = XLSX.utils.sheet_to_json(wb.Sheets[wb.SheetNames[0]]); //outdata就是你想要的东西\r\n\t\t\t            console.log('未处理的原始数据如下：');\r\n\t\t\t            console.log(outdata);\r\n\t\t\t            //此处可对数据进行处理\r\n\t\t\t            let arr = [];\r\n\t\t\t            outdata.map(v => {\r\n\t\t\t                let obj = {}\r\n\t\t\t                obj.code = v['Code']\r\n\t\t\t                obj.name = v['Name']\r\n\t\t\t                obj.pro = v['province']\r\n\t\t\t                obj.cit = v['city']\r\n\t\t\t                obj.dis = v['district']\r\n\t\t\t                arr.push(obj)\r\n\t\t\t            });\r\n\t\t\t            _this.da=arr;\r\n\t\t\t            _this.dalen=arr.length;\r\n\t\t\t            return arr;\r\n\t\t\t        };\r\n\t\t\t        reader.readAsArrayBuffer(f);\r\n\t\t\t    };\r\n\t\t\t    if (rABS) {\r\n\t\t\t        reader.readAsArrayBuffer(f);\r\n\t\t\t    } else {\r\n\t\t\t        reader.readAsBinaryString(f);\r\n\t\t\t    }\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n</script>\r\n\r\n\r\n<style>\r\n</style>\n"]}]}